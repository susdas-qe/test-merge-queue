name: Validate PR
on:
  pull_request:
  merge_group:
jobs:
  static_checks:
    name: validate-changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    # strategy:
    #   matrix:
    #     path:
    #       - task-generator/remote
    steps:
      # - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
      # - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b
      #   with:
      #     go-version-file: './${{matrix.path}}/go.mod'
      #     cache-dependency-path: ./${{matrix.path}}/go.sum
      # # https://github.com/securego/gosec/blob/12be14859bc7d4b956b71bef0b443694aa519d8a/README.md#integrating-with-code-scanning
      # - name: Run Gosec Security Scanner
      #   uses: securego/gosec@master
      #   with:
      #     # we let the report trigger content trigger a failure using the GitHub Security features.
      #     args: '-tags normal,periodic -no-fail -fmt sarif -out results.sarif ${{matrix.path}}/...'
      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@e0ea141027937784e3c10ed1679e503fcc2245bc
      #   with:
      #     # Path to SARIF file relative to the root of the repository
      #     sarif_file: results.sarif

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Differential Checkton requires full git history
          fetch-depth: 0

      - name: check values
        run: |
          echo "GITHUB REF: ${GITHUB_REF}"
          echo "SHA: ${GITHUB_SHA}"
          echo "GITHUB_WORKPACE: ${GITHUB_WORKPLACE}"
          echo "BASE: $(git rev-parse main)"
          echo "HEAD: $(git rev-parse HEAD)"

      - name: Run Checkton
        id: checkton
        uses: tisutisu/checkton@b3486c8faa4e227a8d71c74bc04f814bbdf69cdd
        with:
          # Set to false when re-enabling SARIF uploads
          fail-on-findings: true
          find-copies-harder: true
          exclude-regex: ^task-generator

      # - uses: actions/checkout@v4
      #   with:
      #     ref: "${{ github.event.pull_request.head.sha }}"
      #     path: test-merge-queue
      # - name: Get all changed files in the PR from task directory
      #   id: changed-dirs
      #   uses: tj-actions/changed-files@27ae6b33eaed7bf87272fdeb9f1c54f9facc9d99
      #   with:
      #     path: test-merge-queue
      # - name: Print all the changed_files
      #   run: |
      #     echo "${{ steps.changed-dirs.outputs.all_changed_files }}"
      # - name: check files changed
      #   run: |
      #     echo "=======CHECKOUT REMOTE BRANCH ========"
      #     git remote add upstream https://github.com/susdas-qe/test-merge-queue.git
      #     echo "========= FETCHING REMOTE MAIN BRANCH"
      #     git fetch upstream main
      #     echo "==========CURRENT BRANCH======="
      #     git rev-parse --abbrev-ref HEAD
      #     echo "====== SHA THAT TRIGGERS THE WORKFLOW: ${{ github.sha }}"
      #     changed_files=$(git diff --name-only "upstream/main..HEAD" | tr "\n" " ")
      #     echo "CHANED FILES: ${changed_files}"
      #     ./sample.py ${changed_files}